import json
from pyrogram import filters
from pyrogram.types import Message
import os

PMBL_CONFIG_FILE = 'data/pmbl_config.json'
WHITELIST_FILE = 'data/whitelist.json'

def register(client, bot):
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ PM Blocker
    if not os.path.exists(PMBL_CONFIG_FILE):
        with open(PMBL_CONFIG_FILE, 'w') as f:
            json.dump({"enabled": False}, f)

    with open(PMBL_CONFIG_FILE, 'r') as f:
        config = json.load(f)

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞
    if not os.path.exists(WHITELIST_FILE):
        with open(WHITELIST_FILE, 'w') as f:
            json.dump(["BotFather"], f)

    with open(WHITELIST_FILE, 'r') as f:
        whitelist = json.load(f)

    @client.on_message(filters.command("pmbl", prefixes=bot.prefix) & filters.user(int(bot.owner_id)))
    async def pmbl_toggle(client, message: Message):
        command = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None
        if not command:
            usage_message = (
                "‚ÑπÔ∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n"
                f"{bot.prefix}pmbl {{on/off}} {{help}}\n"
                f"{bot.prefix}pmwl {{–æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ/–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –õ–°}}"
            )
            await message.edit_text(usage_message)
            return

        if command == 'help':
            help_message = (
                "üõ° –ö–æ–º–∞–Ω–¥—ã PM Blocker:\n"
                f"{bot.prefix}pmbl on/off - –í–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –õ–°.\n"
                f"{bot.prefix}pmwl - –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –ª–∏—á–∫–µ –∏–ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ).\n"
                f"{bot.prefix}pmbl help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."
            )
            await message.edit_text(help_message)
            return

        config['enabled'] = (command == 'on')
        with open(PMBL_CONFIG_FILE, 'w') as f:
            json.dump(config, f)

        status = "–≤–∫–ª—é—á–µ–Ω" if config['enabled'] else "–≤—ã–∫–ª—é—á–µ–Ω"
        await message.edit_text(f"üîí PM Blocker {status}.")

    @client.on_message(filters.command("pmwl", prefixes=bot.prefix) & filters.user(int(bot.owner_id)))
    async def pmwl_add(client, message: Message):
        args = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None
        user_id = None

        if message.chat.type == "private":
            user_id = message.chat.id
        elif message.reply_to_message:
            user_id = message.reply_to_message.from_user.id
        elif args:
            try:
                user = await client.get_users(args)
                user_id = user.id
            except Exception as e:
                await message.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
                return

        if not user_id:
            await message.edit_text("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ –ª–∏—á–∫–µ, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ —É–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º.")
            return

        if user_id not in whitelist:
            whitelist.append(user_id)
            with open(WHITELIST_FILE, 'w') as f:
                json.dump(whitelist, f)
            await message.edit_text("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫.")
        else:
            await message.edit_text("‚ÑπÔ∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ.")

    @client.on_message(filters.private & ~filters.user(whitelist))
    async def pmbl_handler(client, message: Message):
        if not config['enabled']:
            return

        try:
            if message.chat.type == "private" and message.from_user:
                await message.edit_text("üö´ –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–µ–≤. –í—ã –±—ã–ª–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.")
                await client.block_user(message.from_user.id)
        except Exception as e:
            await message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

COMMANDS = ["pmbl on/off", "pmwl"]
ModuleName = "PMBlocker"