import os
import json
from pyrogram import filters
from pyrogram.types import Message

MODULES_PATH = 'data'
BACKUP_FILE = os.path.join(MODULES_PATH, 'backup.json')

def register(client, bot):
    @client.on_message(filters.command("acp", prefixes=bot.prefix) & filters.user(int(bot.owner_id)))
    async def ac_handler(client, message: Message):
        # –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –∫–æ–º–∞–Ω–¥—ã
        args = message.text.split(maxsplit=1)[1] if len(message.text.split()) > 1 else None

        if args == "backup":
            await message.edit_text("üîÑ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è...")
            try:
                me = await client.get_me()
                backup_data = {
                    "first_name": me.first_name,
                    "last_name": me.last_name
                }

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏
                async for photo in client.get_chat_photos("me", limit=1):
                    file_path = os.path.join(MODULES_PATH, 'backup_avatar.jpg')
                    await client.download_media(photo.file_id, file_path)
                    backup_data["avatar"] = file_path

                with open(BACKUP_FILE, 'w') as f:
                    json.dump(backup_data, f)

                await message.edit_text("‚úÖ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")
            except Exception as e:
                await message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏: {str(e)}")

        elif args == "restore":
            await message.edit_text("üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑ –±—ç–∫–∞–ø–∞...")
            try:
                if not os.path.exists(BACKUP_FILE):
                    await message.edit_text("‚ö†Ô∏è –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.")
                    return

                with open(BACKUP_FILE, 'r') as f:
                    backup_data = json.load(f)

                # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏
                await client.update_profile(
                    first_name=backup_data.get("first_name", ''),
                    last_name=backup_data.get("last_name", '')
                )

                # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Ç–µ–∫—É—â–∏—Ö –∞–≤–∞—Ç–∞—Ä–æ–∫
                async for photo in client.get_chat_photos("me", limit=1):
                    await client.delete_profile_photos([photo.file_id])

                # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–∏
                if "avatar" in backup_data and os.path.exists(backup_data["avatar"]):
                    await client.set_profile_photo(photo=backup_data["avatar"])

                await message.edit_text("‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
            except Exception as e:
                await message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏: {str(e)}")

        else:
            # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if not args and not message.reply_to_message:
                await message.edit_text("‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º –∏–ª–∏ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
                return

            try:
                if message.reply_to_message:
                    target_user = message.reply_to_message.from_user
                else:
                    target_user = await client.get_users(args)

                await message.edit_text("üîÑ –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")

                # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∫–∏
                async for photo in client.get_chat_photos(target_user.id, limit=1):
                    file_path = os.path.join(MODULES_PATH, 'temp_avatar.jpg')
                    await client.download_media(photo.file_id, file_path)

                    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤–∞—Ç–∞—Ä–∫–∏
                    await client.set_profile_photo(photo=file_path)

                    # –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                    os.remove(file_path)

                # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏
                await client.update_profile(
                    first_name=target_user.first_name or '',
                    last_name=target_user.last_name or ''
                )

                await message.edit_text("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã.")
            except Exception as e:
                await message.edit_text(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
                
COMMANDS = ["acp backup", "acp restore", "acp {username}, {reply_to_message}"]
ModuleName = "AccountCopy"